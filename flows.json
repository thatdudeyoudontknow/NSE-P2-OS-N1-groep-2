[
    {
        "id": "c3467e65ab245fb7",
        "type": "tab",
        "label": "Flow 2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "96c6074880c4d819",
        "type": "exec",
        "z": "c3467e65ab245fb7",
        "command": "/home/pi/test.py",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 360,
        "y": 700,
        "wires": [
            [
                "3eaebf73f4fc7a39",
                "a25a558de7330337",
                "2d67fe089e77c2a7",
                "4e1b55ae7ad16a5d"
            ],
            [],
            []
        ]
    },
    {
        "id": "ef269c8681b88d4f",
        "type": "inject",
        "z": "c3467e65ab245fb7",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 700,
        "wires": [
            [
                "96c6074880c4d819"
            ]
        ]
    },
    {
        "id": "3eaebf73f4fc7a39",
        "type": "function",
        "z": "c3467e65ab245fb7",
        "name": "function 4",
        "func": "\n// Input JSON string (replace this with your actual JSON data)\nvar jsonOutputString = msg.payload;\n\n// Load JSON string into a JavaScript object\nvar jsonData = JSON.parse(jsonOutputString);\n\n// Specify the desired node number\nvar desiredNodeNumber = 1;\n\n// Find the node with the specified node number\nvar desiredNode = jsonData.nodes.find(node => node.node_number === desiredNodeNumber);\n\n// Output the extracted node data\nif (desiredNode) {\n    msg.payload = {\n        nodeNumber: desiredNode.node_number,\n        averageTemperature: desiredNode.average_temperature,\n        averagePressure: desiredNode.average_pressure,\n        averageHumidity: desiredNode.average_humidity\n    };\n    return msg;\n} else {\n    return null; // Node not found\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 620,
        "wires": [
            [
                "94d9304bba9c1cef",
                "d509511ffc6b9b47",
                "1cc5e14bb780d30d"
            ]
        ]
    },
    {
        "id": "4e1b55ae7ad16a5d",
        "type": "function",
        "z": "c3467e65ab245fb7",
        "name": "function 5",
        "func": "\n// Input JSON string (replace this with your actual JSON data)\nvar jsonOutputString = msg.payload;\n\n// Load JSON string into a JavaScript object\nvar jsonData = JSON.parse(jsonOutputString);\n\n// Specify the desired node number\nvar desiredNodeNumber = 2;\n\n// Find the node with the specified node number\nvar desiredNode = jsonData.nodes.find(node => node.node_number === desiredNodeNumber);\n\n// Output the extracted node data\nif (desiredNode) {\n    msg.payload = {\n        nodeNumber: desiredNode.node_number,\n        averageTemperature: desiredNode.average_temperature,\n        averagePressure: desiredNode.average_pressure,\n        averageHumidity: desiredNode.average_humidity\n    };\n    return msg;\n} else {\n    return null; // Node not found\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 700,
        "wires": [
            [
                "533d88b1a585b4c6",
                "7ad09fb6f5fb4e86",
                "df903aec0c555b93"
            ]
        ]
    },
    {
        "id": "2d67fe089e77c2a7",
        "type": "function",
        "z": "c3467e65ab245fb7",
        "name": "function 6",
        "func": "\n// Input JSON string (replace this with your actual JSON data)\nvar jsonOutputString = msg.payload;\n\n// Load JSON string into a JavaScript object\nvar jsonData = JSON.parse(jsonOutputString);\n\n// Specify the desired node number\nvar desiredNodeNumber = 3;\n\n// Find the node with the specified node number\nvar desiredNode = jsonData.nodes.find(node => node.node_number === desiredNodeNumber);\n\n// Output the extracted node data\nif (desiredNode) {\n    msg.payload = {\n        nodeNumber: desiredNode.node_number,\n        averageTemperature: desiredNode.average_temperature,\n        averagePressure: desiredNode.average_pressure,\n        averageHumidity: desiredNode.average_humidity\n    };\n    return msg;\n} else {\n    return null; // Node not found\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 780,
        "wires": [
            [
                "6419aef73c513ec7",
                "4e9439d89dcf14e7",
                "0e7305eb6db55a6e"
            ]
        ]
    },
    {
        "id": "a25a558de7330337",
        "type": "function",
        "z": "c3467e65ab245fb7",
        "name": "function 7",
        "func": "// Input JSON string (replace this with your actual JSON data)\nvar jsonOutputString = msg.payload;\n\n// Load JSON string into a JavaScript object\nvar jsonData = JSON.parse(jsonOutputString);\n\n// Output the extracted overall data\nmsg.payload = {\n    overallAverageTemperature: jsonData.overall.overall_average_temperature,\n    overallAveragePressure: jsonData.overall.overall_average_pressure,\n    overallAverageHumidity: jsonData.overall.overall_average_humidity\n};\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 860,
        "wires": [
            [
                "975fe85c85a6c71b",
                "0434299b68acc345",
                "130c1edc2da3c18e"
            ]
        ]
    },
    {
        "id": "80227472d4b903c6",
        "type": "ui_gauge",
        "z": "c3467e65ab245fb7",
        "name": "temperature",
        "group": "a849a6341a1b6c2d",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "gauge",
        "label": "Kelvin",
        "format": "{{value}}",
        "min": "253.15",
        "max": "313.15",
        "colors": [
            "#47daff",
            "#0aff3b",
            "#ca3838"
        ],
        "seg1": "273,15",
        "seg2": "294,15",
        "diff": false,
        "className": "",
        "x": 1050,
        "y": 1020,
        "wires": []
    },
    {
        "id": "d9928de7c30051a6",
        "type": "ui_gauge",
        "z": "c3467e65ab245fb7",
        "name": "humidity",
        "group": "44838a9e3c34bd8a",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "humidity",
        "label": "%",
        "format": "{{value}}",
        "min": "0",
        "max": "100",
        "colors": [
            "#00ff04",
            "#fbff0f",
            "#9c0707"
        ],
        "seg1": "70",
        "seg2": "80",
        "diff": false,
        "className": "",
        "x": 1040,
        "y": 1100,
        "wires": []
    },
    {
        "id": "ef3e47ce5e65336c",
        "type": "ui_gauge",
        "z": "c3467e65ab245fb7",
        "name": "pressure",
        "group": "553c7f2a8d0f76ea",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "pressure",
        "label": "Bar",
        "format": "{{value}}",
        "min": "1000",
        "max": "1100",
        "colors": [
            "#ffffff",
            "#ffffff",
            "#ffffff"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1040,
        "y": 1180,
        "wires": []
    },
    {
        "id": "e262b81591d8b589",
        "type": "debug",
        "z": "c3467e65ab245fb7",
        "name": "temp-out",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 980,
        "wires": []
    },
    {
        "id": "f54996baefd20df6",
        "type": "debug",
        "z": "c3467e65ab245fb7",
        "name": "hum-out",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 1060,
        "wires": []
    },
    {
        "id": "597836a8ddd8b542",
        "type": "debug",
        "z": "c3467e65ab245fb7",
        "name": "pres-out",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 1140,
        "wires": []
    },
    {
        "id": "b771445b782da762",
        "type": "ui_chart",
        "z": "c3467e65ab245fb7",
        "name": "",
        "group": "44838a9e3c34bd8a",
        "order": 2,
        "width": "6",
        "height": "7",
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "100",
        "removeOlder": "2",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": true,
        "useUTC": false,
        "colors": [
            "#79be15",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1210,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "895597b7f97aa163",
        "type": "ui_chart",
        "z": "c3467e65ab245fb7",
        "name": "",
        "group": "a849a6341a1b6c2d",
        "order": 2,
        "width": "6",
        "height": "7",
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "253.15",
        "ymax": "313.15",
        "removeOlder": "3",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#79be15",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1210,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "975fe85c85a6c71b",
        "type": "function",
        "z": "c3467e65ab245fb7",
        "name": "temp",
        "func": "\nvar jsonOutput = msg.payload;\n\n\nvar temperature = jsonOutput.overallAverageTemperature;\n\n// Round the temperature to a precision of 0.5\ntemperature = Math.round(temperature * 2) / 2;\n\n\nmsg.payload = temperature;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1020,
        "wires": [
            [
                "e262b81591d8b589",
                "80227472d4b903c6",
                "895597b7f97aa163"
            ]
        ]
    },
    {
        "id": "0434299b68acc345",
        "type": "function",
        "z": "c3467e65ab245fb7",
        "name": "hum",
        "func": "\nvar jsonOutput = msg.payload;\n\n\nvar Humidity = jsonOutput.overallAverageHumidity;\n\n// Round the Humidity to a precision of 0.5\nHumidity = Math.round(Humidity * 2) / 2;\n\n\nmsg.payload = Humidity;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1100,
        "wires": [
            [
                "f54996baefd20df6",
                "d9928de7c30051a6",
                "b771445b782da762"
            ]
        ]
    },
    {
        "id": "130c1edc2da3c18e",
        "type": "function",
        "z": "c3467e65ab245fb7",
        "name": "pres",
        "func": "\nvar jsonOutput = msg.payload;\n\n\nvar Pressure = jsonOutput.overallAveragePressure;\n\n// Round the Pressure to a precision of 0.5\nPressure = Math.round(Pressure * 2) / 2;\n\n// Output the extracted Pressure\nmsg.payload = Pressure;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1180,
        "wires": [
            [
                "597836a8ddd8b542",
                "ef3e47ce5e65336c"
            ]
        ]
    },
    {
        "id": "1eb166e7a1e78114",
        "type": "ui_gauge",
        "z": "c3467e65ab245fb7",
        "name": "temperature",
        "group": "7d47614b3681b36b",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Temperature",
        "label": "Kelvin",
        "format": "{{value}}",
        "min": "253.15",
        "max": "313.15",
        "colors": [
            "#47daff",
            "#0aff3b",
            "#ca3838"
        ],
        "seg1": "273,15",
        "seg2": "294,15",
        "diff": false,
        "className": "",
        "x": 1050,
        "y": 300,
        "wires": []
    },
    {
        "id": "67af26941a779f94",
        "type": "debug",
        "z": "c3467e65ab245fb7",
        "name": "temp-out1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 260,
        "wires": []
    },
    {
        "id": "2490eac9d47198bc",
        "type": "ui_gauge",
        "z": "c3467e65ab245fb7",
        "name": "pressure",
        "group": "7d47614b3681b36b",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "pressure",
        "label": "Bar",
        "format": "{{value}}",
        "min": "1000",
        "max": "1100",
        "colors": [
            "#ffffff",
            "#ffffff",
            "#ffffff"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1040,
        "y": 460,
        "wires": []
    },
    {
        "id": "07ee7ca9689e71d2",
        "type": "debug",
        "z": "c3467e65ab245fb7",
        "name": "pres-out1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 420,
        "wires": []
    },
    {
        "id": "9fdccb4a5937aedd",
        "type": "debug",
        "z": "c3467e65ab245fb7",
        "name": "hum-out1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 340,
        "wires": []
    },
    {
        "id": "d4dfb49706286830",
        "type": "ui_gauge",
        "z": "c3467e65ab245fb7",
        "name": "humidity",
        "group": "7d47614b3681b36b",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "humidity",
        "label": "%",
        "format": "{{value}}",
        "min": "0",
        "max": "100",
        "colors": [
            "#00ff04",
            "#fbff0f",
            "#9c0707"
        ],
        "seg1": "70",
        "seg2": "80",
        "diff": false,
        "className": "",
        "x": 1040,
        "y": 380,
        "wires": []
    },
    {
        "id": "1cc5e14bb780d30d",
        "type": "function",
        "z": "c3467e65ab245fb7",
        "name": "temp",
        "func": "\nvar jsonOutput = msg.payload;\n\n\nvar temperature = jsonOutput.averageTemperature;\n\n// Round the temperature to a precision of 0.5\ntemperature = Math.round(temperature * 2) / 2;\n\n\nmsg.payload = temperature;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 300,
        "wires": [
            [
                "1eb166e7a1e78114",
                "67af26941a779f94"
            ]
        ]
    },
    {
        "id": "d509511ffc6b9b47",
        "type": "function",
        "z": "c3467e65ab245fb7",
        "name": "hum",
        "func": "\nvar jsonOutput = msg.payload;\n\nvar averageHumidity = jsonOutput.averageHumidity;\n\n// Round the humidity to a precision of 0.5\naverageHumidity = Math.round(averageHumidity * 2) / 2;\n\n\nmsg.payload = averageHumidity;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 380,
        "wires": [
            [
                "9fdccb4a5937aedd",
                "d4dfb49706286830"
            ]
        ]
    },
    {
        "id": "94d9304bba9c1cef",
        "type": "function",
        "z": "c3467e65ab245fb7",
        "name": "pres",
        "func": "\nvar jsonOutput = msg.payload;\n\n\nvar averagePressure = jsonOutput.averagePressure;\n\n// Round the humidity to a precision of 0.5\naveragePressure = Math.round(averagePressure * 2) / 2;\n\n\nmsg.payload = averagePressure;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 460,
        "wires": [
            [
                "07ee7ca9689e71d2",
                "2490eac9d47198bc"
            ]
        ]
    },
    {
        "id": "c7e067a03383afbc",
        "type": "ui_gauge",
        "z": "c3467e65ab245fb7",
        "name": "temperature",
        "group": "f3454f49f3b478a3",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Temperature",
        "label": "Kelvin",
        "format": "{{value}}",
        "min": "253.15",
        "max": "313.15",
        "colors": [
            "#47daff",
            "#0aff3b",
            "#ca3838"
        ],
        "seg1": "273,15",
        "seg2": "294,15",
        "diff": false,
        "className": "",
        "x": 1050,
        "y": 540,
        "wires": []
    },
    {
        "id": "176b2f665e791daf",
        "type": "debug",
        "z": "c3467e65ab245fb7",
        "name": "temp-out2",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 500,
        "wires": []
    },
    {
        "id": "da5e46834728e732",
        "type": "ui_gauge",
        "z": "c3467e65ab245fb7",
        "name": "pressure",
        "group": "f3454f49f3b478a3",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "pressure",
        "label": "Bar",
        "format": "{{value}}",
        "min": "1000",
        "max": "1100",
        "colors": [
            "#ffffff",
            "#ffffff",
            "#ffffff"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1040,
        "y": 700,
        "wires": []
    },
    {
        "id": "5b13e8d5fad0f19d",
        "type": "debug",
        "z": "c3467e65ab245fb7",
        "name": "pres-out2",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 660,
        "wires": []
    },
    {
        "id": "d2127fbfa9a8a961",
        "type": "debug",
        "z": "c3467e65ab245fb7",
        "name": "hum-out2",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 580,
        "wires": []
    },
    {
        "id": "405704e476bd996c",
        "type": "ui_gauge",
        "z": "c3467e65ab245fb7",
        "name": "humidity",
        "group": "f3454f49f3b478a3",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "humidity",
        "label": "%",
        "format": "{{value}}",
        "min": "0",
        "max": "100",
        "colors": [
            "#00ff04",
            "#fbff0f",
            "#9c0707"
        ],
        "seg1": "70",
        "seg2": "80",
        "diff": false,
        "className": "",
        "x": 1040,
        "y": 620,
        "wires": []
    },
    {
        "id": "533d88b1a585b4c6",
        "type": "function",
        "z": "c3467e65ab245fb7",
        "name": "temp",
        "func": "\nvar jsonOutput = msg.payload;\n\n\nvar temperature = jsonOutput.averageTemperature;\n\n// Round the temperature to a precision of 0.5\ntemperature = Math.round(temperature * 2) / 2;\n\n\nmsg.payload = temperature;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 540,
        "wires": [
            [
                "c7e067a03383afbc",
                "176b2f665e791daf"
            ]
        ]
    },
    {
        "id": "7ad09fb6f5fb4e86",
        "type": "function",
        "z": "c3467e65ab245fb7",
        "name": "hum",
        "func": "\nvar jsonOutput = msg.payload;\n\nvar averageHumidity = jsonOutput.averageHumidity;\n\n// Round the humidity to a precision of 0.5\naverageHumidity = Math.round(averageHumidity * 2) / 2;\n\n\nmsg.payload = averageHumidity;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 620,
        "wires": [
            [
                "405704e476bd996c",
                "d2127fbfa9a8a961"
            ]
        ]
    },
    {
        "id": "df903aec0c555b93",
        "type": "function",
        "z": "c3467e65ab245fb7",
        "name": "pres",
        "func": "\nvar jsonOutput = msg.payload;\n\n\nvar averagePressure = jsonOutput.averagePressure;\n\n// Round the humidity to a precision of 0.5\naveragePressure = Math.round(averagePressure * 2) / 2;\n\n\nmsg.payload = averagePressure;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 700,
        "wires": [
            [
                "da5e46834728e732",
                "5b13e8d5fad0f19d"
            ]
        ]
    },
    {
        "id": "46ad2e87caca36a2",
        "type": "debug",
        "z": "c3467e65ab245fb7",
        "name": "temp-out",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 740,
        "wires": []
    },
    {
        "id": "9f8c780968d048f6",
        "type": "ui_gauge",
        "z": "c3467e65ab245fb7",
        "name": "pressure",
        "group": "49ed24fb931d55e0",
        "order": 2,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "pressure",
        "label": "Bar",
        "format": "{{value}}",
        "min": "1000",
        "max": "1100",
        "colors": [
            "#ffffff",
            "#ffffff",
            "#ffffff"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1040,
        "y": 940,
        "wires": []
    },
    {
        "id": "f0649e1367af637a",
        "type": "debug",
        "z": "c3467e65ab245fb7",
        "name": "pres-out",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 900,
        "wires": []
    },
    {
        "id": "09d65c6b7491f438",
        "type": "debug",
        "z": "c3467e65ab245fb7",
        "name": "hum-out",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 820,
        "wires": []
    },
    {
        "id": "cf94e04478a54163",
        "type": "ui_gauge",
        "z": "c3467e65ab245fb7",
        "name": "humidity",
        "group": "49ed24fb931d55e0",
        "order": 3,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "humidity",
        "label": "%",
        "format": "{{value}}",
        "min": "0",
        "max": "100",
        "colors": [
            "#00ff04",
            "#fbff0f",
            "#9c0707"
        ],
        "seg1": "70",
        "seg2": "80",
        "diff": false,
        "className": "",
        "x": 1040,
        "y": 860,
        "wires": []
    },
    {
        "id": "21acd4cebb8251b7",
        "type": "ui_gauge",
        "z": "c3467e65ab245fb7",
        "name": "",
        "group": "49ed24fb931d55e0",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Temperature",
        "label": "Kelvin",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1050,
        "y": 780,
        "wires": []
    },
    {
        "id": "6419aef73c513ec7",
        "type": "function",
        "z": "c3467e65ab245fb7",
        "name": "temp",
        "func": "\nvar jsonOutput = msg.payload;\n\n\nvar temperature = jsonOutput.averageTemperature;\n\n// Round the temperature to a precision of 0.5\ntemperature = Math.round(temperature * 2) / 2;\n\n\nmsg.payload = temperature;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 780,
        "wires": [
            [
                "21acd4cebb8251b7",
                "46ad2e87caca36a2"
            ]
        ]
    },
    {
        "id": "4e9439d89dcf14e7",
        "type": "function",
        "z": "c3467e65ab245fb7",
        "name": "hum",
        "func": "\nvar jsonOutput = msg.payload;\n\nvar averageHumidity = jsonOutput.averageHumidity;\n\n// Round the humidity to a precision of 0.5\naverageHumidity = Math.round(averageHumidity * 2) / 2;\n\n\nmsg.payload = averageHumidity;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 860,
        "wires": [
            [
                "cf94e04478a54163",
                "09d65c6b7491f438"
            ]
        ]
    },
    {
        "id": "0e7305eb6db55a6e",
        "type": "function",
        "z": "c3467e65ab245fb7",
        "name": "pres",
        "func": "\nvar jsonOutput = msg.payload;\n\n\nvar averagePressure = jsonOutput.averagePressure;\n\n// Round the humidity to a precision of 0.5\naveragePressure = Math.round(averagePressure * 2) / 2;\n\n\nmsg.payload = averagePressure;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 940,
        "wires": [
            [
                "9f8c780968d048f6",
                "f0649e1367af637a"
            ]
        ]
    },
    {
        "id": "a849a6341a1b6c2d",
        "type": "ui_group",
        "name": "temperature",
        "tab": "cf3653bb5fa876ff",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "44838a9e3c34bd8a",
        "type": "ui_group",
        "name": "Humidity",
        "tab": "cf3653bb5fa876ff",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "553c7f2a8d0f76ea",
        "type": "ui_group",
        "name": "Pressure",
        "tab": "cf3653bb5fa876ff",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ".{     flex-wrap: nowrap !important; /* Voorkom dat de kaarten worden gewrapt naar de volgende regel */     overflow-x: auto; /* Horizontaal scrollen inschakelen als de kaarten niet op de pagina passen */ }"
    },
    {
        "id": "7d47614b3681b36b",
        "type": "ui_group",
        "name": "Node_1",
        "tab": "cc7664237b6f4e3a",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": "temperature"
    },
    {
        "id": "f3454f49f3b478a3",
        "type": "ui_group",
        "name": "Node_2",
        "tab": "cc7664237b6f4e3a",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "49ed24fb931d55e0",
        "type": "ui_group",
        "name": "Node_3",
        "tab": "cc7664237b6f4e3a",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "cf3653bb5fa876ff",
        "type": "ui_tab",
        "name": "Raspberry",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "cc7664237b6f4e3a",
        "type": "ui_tab",
        "name": "Nodes",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    }
]